- name: Finding MAC address of the physical network
  ansible.builtin.set_fact:
    physical_interface_mac: "{{ (nic | selectattr('name', 'eq', 'physical') | first)['mac'] }}"
    available_interfaces: "{{ ansible_facts | dict2items | map(attribute='value') | select('mapping') | selectattr('macaddress', 'defined') | list }}"

- name: Retrieving Pod name
  ansible.builtin.set_fact:
    host_pod_name: "{{ sp_cluster_params[lab_environment]['cluster_' + user_attributes.cloudstack_cluster]['pod'] }}"

- name: Setting host Pod network prefix
  ansible.builtin.set_fact:
    host_pod_prefix: "{{ (sp_cluster_params[lab_environment]['cloudstack_pods'] | selectattr('name', 'eq', host_pod_name) | first)['prefix'] }}"
    host_management_ip_offset: "{{ (-11 - (groups['cloudstack_hypervisors'].index(inventory_hostname))) | string }}"

- name: Setting cloudbr0 IP address
  ansible.builtin.set_fact:
    host_management_ip_address: "{{ host_pod_prefix | ansible.utils.ipaddr(host_management_ip_offset) }}"

- name: Adding a cloudbr0 interface
  become: true
  community.general.nmcli:
    conn_name: cloudbr0
    ifname: cloudbr0
    type: bridge
    ip4: "{{ host_management_ip_address }}"
    state: present
  when:
    - (ansible_distribution_major_version | int) >= 8

- name: Adding a slave interface to cloudbr0 interface
  become: true
  community.general.nmcli:
    conn_name: cloudbr0-slave
    ifname: "{{ (available_interfaces | selectattr('macaddress', 'eq', physical_interface_mac) | first)['device'] }}"
    type: bridge-slave
    master: cloudbr0
    state: present
    hairpin: false
  when:
    - (ansible_distribution_major_version | int) >= 8
